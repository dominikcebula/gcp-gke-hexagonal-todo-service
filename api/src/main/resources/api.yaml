openapi: "3.0.0"
info:
  version: 1.0.0
  title: To Do Service API
  license:
    name: MIT
paths:
  /todos:
    get:
      summary: Get all todo items
      operationId: getTodoItems
      responses:
        '200':
          description: An array of todo items
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItems"
    post:
      summary: Create a new todo item
      operationId: createTodoItem
      requestBody:
        description: Create a new todo item
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoItem"
      responses:
        '201':
          description: Created todo item
          headers:
            Location:
              description: Location of created todo item
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
  /todos/{todoId}:
    get:
      summary: Get todo item by id
      operationId: getTodoItemById
      parameters:
        - name: todoId
          in: path
          description: Todo item id to retrieve
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Todo item matching id
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '404':
          description: Todo item not found
    put:
      summary: Update todo item by id
      operationId: updateTodoItemById
      parameters:
        - name: todoId
          in: path
          description: Todo item id to update
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        description: Todo item content which should be used to update existing todo item
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/TodoItem"
      responses:
        '201':
          description: Created todo item if todo item did not exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '200':
          description: Updated todo item if todo item did exist
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/TodoItem"
        '404':
          description: Todo item not found
    delete:
      summary: Delete todo item by id
      operationId: deleteTodoItemById
      parameters:
        - name: todoId
          in: path
          description: Todo item id to delete
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: Todo item was deleted
components:
  schemas:
    TodoItem:
      type: object
      required:
        - name
        - completed
      properties:
        id:
          type: string
          format: uuid
        name:
          type: string
        completed:
          type: boolean
    TodoItems:
      type: array
      items:
        $ref: "#/components/schemas/TodoItem"
